[{"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/index.js":"1","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/App.js":"2","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Home.js":"3","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Reports.js":"4","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Login.js":"5","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Products.js":"6","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/Sidebar.js":"7","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/index.jsx":"8","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/SidebarData.js":"9","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/Calendar/Calendar.js":"10","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/Login.jsx":"11","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/Register.jsx":"12","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/map/MyFuncSatMap.js":"13","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/map/SatMap.js":"14","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/StatsSidebar.js":"15","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/weather/WeatherCard.js":"16","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/plot/Plot.js":"17"},{"size":207,"mtime":1610291584185,"results":"18","hashOfConfig":"19"},{"size":697,"mtime":1610412505657,"results":"20","hashOfConfig":"19"},{"size":292,"mtime":1610412530789,"results":"21","hashOfConfig":"19"},{"size":794,"mtime":1610412731710,"results":"22","hashOfConfig":"19"},{"size":1866,"mtime":1610411960486,"results":"23","hashOfConfig":"19"},{"size":244,"mtime":1610397253079,"results":"24","hashOfConfig":"19"},{"size":8319,"mtime":1610412343434,"results":"25","hashOfConfig":"19"},{"size":93,"mtime":1610401832460,"results":"26","hashOfConfig":"19"},{"size":973,"mtime":1610407360031,"results":"27","hashOfConfig":"19"},{"size":981,"mtime":1610412343427,"results":"28","hashOfConfig":"19"},{"size":1818,"mtime":1610411813206,"results":"29","hashOfConfig":"19"},{"size":2334,"mtime":1610411976014,"results":"30","hashOfConfig":"19"},{"size":2750,"mtime":1610412343427,"results":"31","hashOfConfig":"19"},{"size":1328,"mtime":1610412343427,"results":"32","hashOfConfig":"19"},{"size":6369,"mtime":1610412343429,"results":"33","hashOfConfig":"19"},{"size":1395,"mtime":1610412343430,"results":"34","hashOfConfig":"19"},{"size":2384,"mtime":1610412343428,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"v2yd6v",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/index.js",[],["76","77"],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/App.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Home.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Reports.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Login.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/pages/Products.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/Sidebar.js",["78","79","80","81"],"import React, { useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { SidebarData } from \"./SidebarData\";\nimport \"./Sidebar.css\";\nimport { IconContext } from \"react-icons\";\nimport UserPhoto from \"../../assets/user.svg\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { FilePicker } from \"react-file-picker\";\nimport axios, { post } from \"axios\";\nimport shp from \"shpjs\";\nimport Calendar from \"../Calendar/Calendar\";\n\nfunction Sidebar(props) {\n    const [sidebar, setSidebar] = useState(false);\n    const [showAddParcelForm, setShowAddParcelForm] = useState(false);\n    const [calendar, setCalendar] = useState(false);\n    const [addParcelInfo, setAddParcelInfo] = useState(\"\");\n    const [profilePhotoSrc, setProfilePhotoSrc] = useState(\n        \"../../assets/user.svg\"\n    );\n    const [selectedDate, setSelectedDate] = useState(new Date(\"08/15/2020\"));\n\n    const showSidebar = () => setSidebar(!sidebar);\n    const showCalendar = () => setCalendar(!calendar);\n    const months = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n    ];\n\n    const getDateString = (date) => {\n        const dateString =\n            date.getDate() +\n            \" \" +\n            months[date.getMonth()] +\n            \", \" +\n            date.getFullYear();\n\n        return dateString;\n    };\n\n    const handleOnChangeFile = (file) => {\n        setAddParcelInfo(file.name);\n\n        let reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = () => {\n            let arrayBuffer = new Uint8Array(reader.result);\n            shp(arrayBuffer)\n                .then(function (geojson) {\n                    console.log(geojson);\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        };\n    };\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: \"#afaeab\" }}>\n                <div className=\"sidebar-container\">\n                    <div className=\"sidebar\">\n                        <Link to=\"#\" className=\"menu-bars\">\n                            <FaIcons.FaBars\n                                onClick={showSidebar}\n                                color=\"#494646\"\n                            />\n                        </Link>\n                        <Link\n                            to=\"#\"\n                            className=\"menu-parcel-title\"\n                            onClick={showCalendar}\n                        >\n                            <h2>{getDateString(selectedDate)}</h2>\n                        </Link>\n                        <Link to=\"#\" className=\"menu-search\">\n                            <FaIcons.FaSearch color=\"#494646\" />\n                        </Link>\n                    </div>\n                    {showCalendar ? (\n                        <Calendar\n                            datePickerIsOpen={calendar}\n                            selectedDate={selectedDate}\n                            changeSelectedDate={(date) => setSelectedDate(date)}\n                        />\n                    ) : null}\n                </div>\n                <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n                    <ul className=\"nav-menu-items\">\n                        <li className=\"navbar-toggle\">\n                            <div className=\"navbar-header\">\n                                <div className=\"navbar-profile\">\n                                    <div className=\"menu-bars navbar-profile-photo\">\n                                        <img alt=\"user\" src={UserPhoto} />\n                                    </div>\n                                    <div className=\"navbar-profile-info\">\n                                        <h3 className=\"info-name\">User Name</h3>\n                                        <Link to=\"/\" className=\"info-logout\">\n                                            Log out\n                                        </Link>\n                                    </div>\n                                </div>\n                                <Link\n                                    to=\"#\"\n                                    className=\"menu-bars\"\n                                    onClick={showSidebar}\n                                >\n                                    <AiIcons.AiOutlineClose />\n                                </Link>\n                            </div>\n                        </li>\n                        <li className=\"nav-text title\">\n                            <h3>DEMO Farm</h3>\n                            <p>6 parcels → 17 ha</p>\n                        </li>\n                        {SidebarData.map((item, index) => {\n                            return (\n                                <li key={index} className={item.cName}>\n                                    <Link to={item.path}>\n                                        {item.icon}\n                                        <span>{item.title}</span>\n                                    </Link>\n                                </li>\n                            );\n                        })}\n                        <li className=\"nav-text add-parcel\">\n                            <Button\n                                variant=\"light\"\n                                size=\"lg\"\n                                onClick={() =>\n                                    setShowAddParcelForm(!showAddParcelForm)\n                                }\n                            >\n                                <FaIcons.FaPlusCircle color=\"rgba(53, 50, 45, 0.9)\" />\n                                Add parcel\n                            </Button>\n                        </li>\n                        {showAddParcelForm ? (\n                            <li className=\"nav-text add-parcel\">\n                                <Form>\n                                    <Form.Group controlId=\"formBasicEmail\">\n                                        <Form.Label>Parcel name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            placeholder=\"Enter parcel name\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>\n                                            APIA exported ZIP\n                                        </Form.Label>\n                                        <div className=\"upload-zip\">\n                                            <FilePicker\n                                                extensions={[\"zip\"]}\n                                                onChange={(fileObject) =>\n                                                    handleOnChangeFile(\n                                                        fileObject\n                                                    )\n                                                }\n                                                onError={(errMsg) => {\n                                                    setAddParcelInfo(errMsg);\n                                                }}\n                                            >\n                                                <Button variant=\"outline-secondary\">\n                                                    Add .zip\n                                                </Button>\n                                            </FilePicker>\n                                            <span>{addParcelInfo}</span>\n                                        </div>\n                                    </Form.Group>\n                                    <Button type=\"submit\" variant=\"secondary\">\n                                        Upload\n                                    </Button>\n                                </Form>\n                            </li>\n                        ) : null}\n                    </ul>\n                </nav>\n            </IconContext.Provider>\n        </>\n    );\n}\n\nexport default Sidebar;\n","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/index.jsx",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/SidebarData.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/Calendar/Calendar.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/Login.jsx",["82","83"],"import React from \"react\";\nimport loginImg from \"../../login.svg\"\nimport axios from 'axios';\n\nexport class Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        email: '',\n        password: ''\n      }\n    \n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    \n    handleSubmit = event => {\n        event.preventDefault();\n        \n        const user = {\n            email: this.state.email,\n            password: this.state.password\n        };\n\n        axios.post('http://localhost:9090/login', user)\n        .then(res => {\n            console.log(res.data);\n            localStorage.setItem(\"Auth\", res.data.jwt);\n        })\n    }\n\n    render() {\n        return <div className=\"base-container\" ref={this.props.containerRef}>\n            <div className=\"content\">\n                <div className=\"image\">\n                    <img src={loginImg}/>\n                </div>\n                <div className=\"form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"email\" name=\"email\" placeholder=\"ceres.team15@gmail.com\" value={this.state.email} onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" placeholder=\"******\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer\">\n                <button type=\"submit\" className=\"btn\" onClick={this.handleSubmit}>Login</button>\n            </div>\n        </div>\n    }\n}\n","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/login/Register.jsx",["84"],"import React from \"react\";\nimport axios from 'axios';\n\nexport class Register extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n      }\n    \n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n    \n    handleSubmit = event => {\n        event.preventDefault();\n        \n        const user = {\n            \"email\": this.state.email,\n            \"password\": this.state.password,\n            \"firstName\": this.state.firstName,\n            \"lastName\": this.state.lastName\n        };\n\n        axios.post('http://localhost:9090/register', user)\n        .then(res => {\n            console.log(res.data);\n        })\n    }\n\n    render() {\n        return <div className=\"base-container\" ref={this.props.containerRef}>\n            <div className=\"content\">\n                <div className=\"form\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"firstname\">First name</label>\n                        <input type=\"text\" name=\"firstName\" placeholder=\"Ceres\" value={this.state.firstName} onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"lastname\">Last name</label>\n                        <input type=\"text\" name=\"lastName\" placeholder=\"Team\" value={this.state.lastName} onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"email\" name=\"email\" placeholder=\"ceres.team15@gmail.com\" value={this.state.email} onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" placeholder=\"******\" value={this.state.password} onChange={this.handleChange} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer\">\n                <button type=\"button\" className=\"btn\" onClick={this.handleSubmit}>Register</button>\n            </div>\n        </div>\n    }\n}","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/map/MyFuncSatMap.js",["85","86","87","88","89","90","91","92"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Map, GeoJSON } from \"react-leaflet\";\r\nimport { CRS } from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport * as parcelData from \"./data/exemplu.json\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport StatsSidebar from \"../sidebar/StatsSidebar\";\r\n\r\nexport default () => {\r\n    const [statsSidebar, setStatsSidebar] = useState(false);\r\n\r\n    const showStatsSidebar = () => setStatsSidebar(!statsSidebar);\r\n\r\n    const mapRef = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        mapRef.current = L.map(\"map\", {\r\n            center: [43.90079915690249, 25.212335586547848],\r\n            zoomControl: false,\r\n            layers: [\r\n                L.tileLayer(\r\n                    \"https://api.maptiler.com/maps/hybrid/{z}/{x}/{y}@2x.jpg?key=MZ50Vh00lW3Wpy4qUbr7\",\r\n                    {\r\n                        attribution:\r\n                            '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> <a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>',\r\n                    }\r\n                ),\r\n            ],\r\n        });\r\n        console.log();\r\n    }, []);\r\n\r\n    const zoomControl = React.useRef(null);\r\n    React.useEffect(() => {\r\n        zoomControl.current = L.control\r\n            .zoom({\r\n                position: \"topright\",\r\n            })\r\n            .addTo(mapRef.current);\r\n    }, []);\r\n\r\n    const geoJsonLayer = React.useRef(null);\r\n    React.useEffect(() => {\r\n        geoJsonLayer.current = L.geoJSON(parcelData.features).addTo(\r\n            mapRef.current\r\n        );\r\n    }, []);\r\n\r\n    const dataLayer = React.useRef(null);\r\n    React.useEffect(() => {\r\n        parcelData.features.forEach((parcel) => {\r\n            var dataLink = parcel.data[0].link;\r\n            var bounds = parcel.geometry.coordinates;\r\n            var reversedBounds = parcel.geometry.coordinates[0].map(\r\n                (coordinate) => {\r\n                    return coordinate.reverse();\r\n                }\r\n            );\r\n\r\n            var newOverlay = L.imageOverlay(dataLink, reversedBounds, {\r\n                interactive: true,\r\n            });\r\n\r\n            newOverlay.on(\"click\", function (d) {\r\n                showStatsSidebar();\r\n            });\r\n\r\n            newOverlay.addTo(mapRef.current);\r\n\r\n            mapRef.current.fitBounds(bounds);\r\n        });\r\n    }, [dataLayer]);\r\n\r\n    return (\r\n        <div id=\"map\">\r\n            <StatsSidebar\r\n                showStatsSidebar={showStatsSidebar}\r\n                parcelName=\"Parcel Name\"\r\n                isOpenStatsSidebar={statsSidebar}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/map/SatMap.js",["93","94","95","96","97"],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/sidebar/StatsSidebar.js",["98"],"import React, { useState } from \"react\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport \"./Sidebar.css\";\nimport \"./StatsSidebar.css\";\nimport { IconContext } from \"react-icons\";\nimport WeatherCard from \"../weather/WeatherCard\";\nimport Plot from \"../plot/Plot\";\n\nfunction StatsSidebar(props) {\n    const values = [\n        [\"Sun Mar 01 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.48\"],\n        [\"Mon Mar 02 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.48\"],\n        [\"Tue Mar 03 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.57\"],\n        [\"Wed Mar 04 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.48\"],\n        [\"Thu Mar 05 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.52\"],\n        [\"Fri Mar 06 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.58\"],\n        [\"Sat Mar 07 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.53\"],\n        [\"Sun Mar 08 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.57\"],\n        [\"Mon Mar 09 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.55\"],\n        [\"Tue Mar 10 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.46\"],\n        [\"Wed Mar 11 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.49\"],\n        [\"Thu Mar 12 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.51\"],\n        [\"Fri Mar 13 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.42\"],\n        [\"Sat Mar 14 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.43\"],\n        [\"Sun Mar 15 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.44\"],\n        [\"Mon Mar 16 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.49\"],\n        [\"Tue Mar 17 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.48\"],\n        [\"Wed Mar 18 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.45\"],\n        [\"Thu Mar 19 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.48\"],\n        [\"Fri Mar 20 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.57\"],\n        [\"Sat Mar 21 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.57\"],\n        [\"Sun Mar 22 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.46\"],\n        [\"Mon Mar 23 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.54\"],\n        [\"Tue Mar 24 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.54\"],\n        [\"Wed Mar 25 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.45\"],\n        [\"Thu Mar 26 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.50\"],\n        [\"Fri Mar 27 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.55\"],\n        [\"Sat Mar 28 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.45\"],\n        [\"Sun Mar 29 2020 00:00:00 GMT+0200 (GMT+02:00)\", \"0.45\"],\n        [\"Mon Mar 30 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.48\"],\n        [\"Wed Apr 01 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.47\"],\n        [\"Thu Apr 02 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.42\"],\n        [\"Fri Apr 03 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.58\"],\n        [\"Sat Apr 04 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.53\"],\n        [\"Sun Apr 05 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.55\"],\n        [\"Mon Apr 06 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.47\"],\n        [\"Tue Apr 07 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.54\"],\n        [\"Wed Apr 08 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.42\"],\n        [\"Thu Apr 09 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.60\"],\n        [\"Fri Apr 10 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.43\"],\n        [\"Sat Apr 11 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.44\"],\n        [\"Sun Apr 12 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.41\"],\n        [\"Mon Apr 13 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.59\"],\n        [\"Tue Apr 14 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.55\"],\n        [\"Wed Apr 15 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.45\"],\n        [\"Thu Apr 16 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.50\"],\n        [\"Fri Apr 17 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.56\"],\n        [\"Sat Apr 18 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.57\"],\n        [\"Sun Apr 19 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.45\"],\n        [\"Mon Apr 20 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.54\"],\n        [\"Tue Apr 21 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.43\"],\n        [\"Wed Apr 22 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.40\"],\n        [\"Thu Apr 23 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.54\"],\n        [\"Fri Apr 24 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.40\"],\n        [\"Sat Apr 25 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.51\"],\n        [\"Sun Apr 26 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.44\"],\n        [\"Mon Apr 27 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.51\"],\n        [\"Tue Apr 28 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.42\"],\n        [\"Wed Apr 29 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.51\"],\n        [\"Thu Apr 30 2020 00:00:00 GMT+0300 (GMT+03:00)\", \"0.56\"],\n    ];\n    return (\n        <IconContext.Provider value={{ color: \"#afaeab\" }}>\n            <nav\n                className={\n                    props.isOpenStatsSidebar ? \"nav-menu active\" : \"nav-menu\"\n                }\n            >\n                <ul className=\"nav-menu-items\">\n                    <li className=\"navbar-toggle\">\n                        <div className=\"navbar-header\">\n                            <div className=\"navbar-profile\">\n                                <div className=\"navbar-profile-info\">\n                                    <h3\n                                        style={{ marginLeft: \"2rem\" }}\n                                        className=\"info-name\"\n                                    >\n                                        Your parcel statistics\n                                    </h3>\n                                </div>\n                            </div>\n                            <Link\n                                to=\"#\"\n                                className=\"menu-bars\"\n                                onClick={() => {\n                                    props.showStatsSidebar();\n                                }}\n                            >\n                                <AiIcons.AiOutlineClose />\n                            </Link>\n                        </div>\n                    </li>\n                    <li className=\"nav-text title\">\n                        <h3>{props.parcelName}</h3>\n                        <p>10 ha</p>\n                    </li>\n                    <WeatherCard parcelName={props.parcelName} />\n                    <li\n                        className=\"nav-text title\"\n                        style={{ marginTop: \"2rem\" }}\n                    >\n                        <h3>NDVI statistics over time</h3>\n                    </li>\n                    <Plot values={values} />\n                </ul>\n            </nav>\n        </IconContext.Provider>\n    );\n}\n\nexport default StatsSidebar;\n","/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/weather/WeatherCard.js",[],"/Users/larisa/Desktop/Startup Engineering/ceres-app/src/components/plot/Plot.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":12,"column":17,"nodeType":"105","messageId":"106","endLine":12,"endColumn":21},{"ruleId":"103","severity":1,"message":"108","line":21,"column":12,"nodeType":"105","messageId":"106","endLine":21,"endColumn":27},{"ruleId":"103","severity":1,"message":"109","line":21,"column":29,"nodeType":"105","messageId":"106","endLine":21,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":7,"column":5,"nodeType":"112","messageId":"113","endLine":9,"endColumn":6},{"ruleId":"114","severity":1,"message":"115","line":39,"column":21,"nodeType":"116","endLine":39,"endColumn":42},{"ruleId":"110","severity":1,"message":"111","line":6,"column":5,"nodeType":"112","messageId":"113","endLine":8,"endColumn":6},{"ruleId":"103","severity":1,"message":"117","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"118","line":1,"column":25,"nodeType":"105","messageId":"106","endLine":1,"endColumn":34},{"ruleId":"103","severity":1,"message":"119","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"120","line":2,"column":15,"nodeType":"105","messageId":"106","endLine":2,"endColumn":22},{"ruleId":"103","severity":1,"message":"121","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":10,"column":1,"nodeType":"125","endLine":84,"endColumn":3},{"ruleId":"126","severity":1,"message":"127","line":73,"column":8,"nodeType":"128","endLine":73,"endColumn":19,"suggestions":"129"},{"ruleId":"103","severity":1,"message":"130","line":4,"column":5,"nodeType":"105","messageId":"106","endLine":4,"endColumn":12},{"ruleId":"103","severity":1,"message":"131","line":5,"column":5,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"132","line":9,"column":5,"nodeType":"105","messageId":"106","endLine":9,"endColumn":17},{"ruleId":"103","severity":1,"message":"133","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":9},{"ruleId":"103","severity":1,"message":"134","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":31},{"ruleId":"103","severity":1,"message":"135","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'post' is defined but never used.","'profilePhotoSrc' is assigned a value but never used.","'setProfilePhotoSrc' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Map' is defined but never used.","'GeoJSON' is defined but never used.","'CRS' is defined but never used.","'Sidebar' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'showStatsSidebar'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'Polygon' is defined but never used.","'Polyline' is defined but never used.","'ImageOverlay' is defined but never used.","'L' is defined but never used.","'ReactLeafletGoogleLayer' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [dataLayer, showStatsSidebar]",{"range":"141","text":"142"},[2478,2489],"[dataLayer, showStatsSidebar]"]